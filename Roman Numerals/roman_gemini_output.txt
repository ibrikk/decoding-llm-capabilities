============================= test session starts ==============================
platform darwin -- Python 3.11.5, pytest-8.3.2, pluggy-1.5.0
rootdir: /Users/ibrahimkhalilov/Documents/decoding-llm-capabilities/Roman Numerals
collected 1 item

roman_gemini.py F                                                        [100%]

=================================== FAILURES ===================================
______________________________ test_valid_numeral ______________________________

    def test_valid_numeral():
        # Test cases for Rule 1 (alphabetic characters)
        assert not valid_numeral("123")
        assert not valid_numeral("!@#$%^")
    
        # Test cases for Rule 2 (valid Roman characters)
        assert not valid_numeral("IIII")  # More than 3 'I'
        assert not valid_numeral("VVVV")  # More than 3 'V'
        assert not valid_numeral("AB")
    
        # Test cases for Rule 3 (no more than 3 consecutive repetitions)
        assert not valid_numeral("IIII")
        assert not valid_numeral("VVVVV")
    
        # Test cases for Rule 4 (larger to smaller order)
>       assert not valid_numeral("VL")  # Large followed by smaller (not allowed)
E       AssertionError: assert not True
E        +  where True = valid_numeral('VL')

roman_gemini.py:106: AssertionError
=========================== short test summary info ============================
FAILED roman_gemini.py::test_valid_numeral - AssertionError: assert not True
============================== 1 failed in 0.02s ===============================
