============================= test session starts ==============================
platform darwin -- Python 3.11.5, pytest-8.3.2, pluggy-1.5.0
rootdir: /Users/ibrahimkhalilov/Documents/decoding-llm-capabilities/Roman Numerals
collected 3 items

roman_github_copilot.py ...                                              [100%]

=============================== warnings summary ===============================
roman_github_copilot.py::test1
  /Users/ibrahimkhalilov/Documents/decoding-llm-capabilities/myenv/lib/python3.11/site-packages/_pytest/python.py:163: PytestReturnNotNoneWarning: Expected None, but roman_github_copilot.py::test1 returned 'Rule 1 tests passed', which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?
    warnings.warn(

roman_github_copilot.py::test2
  /Users/ibrahimkhalilov/Documents/decoding-llm-capabilities/myenv/lib/python3.11/site-packages/_pytest/python.py:163: PytestReturnNotNoneWarning: Expected None, but roman_github_copilot.py::test2 returned 'Rule 2 tests passed', which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?
    warnings.warn(

roman_github_copilot.py::testN
  /Users/ibrahimkhalilov/Documents/decoding-llm-capabilities/myenv/lib/python3.11/site-packages/_pytest/python.py:163: PytestReturnNotNoneWarning: Expected None, but roman_github_copilot.py::testN returned 'Rule 3-7 tests passed', which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 3 passed, 3 warnings in 0.01s =========================
